{"version":3,"file":"index.css","mappings":";;;AA4CU;ECrBR;ADrBF;AA8CU;ECvBR;EACA;EACA;ADpBF;AAyCU;EClBR;EACA;ADpBF;AAqCU;EClBR;EACA;ADhBF;AAiCU;EClBR;EACA;ADZF;AA6BU;EClBR;EACA;ADRF;AAyBU;EClBR;EACA;ADJF;AAqBU;EClBR;EACA;ADAF;AAiBU;EClBR;EACA;ADIF;AAaU;EClBR;EACA;ADQF;AASU;EClBR;EACA;ADYF;AAKU;EClBR;EACA;ADgBF;AACU;EClBR;EACA;ADoBF;AAHU;EClBR;EACA;ADwBF;AC5CE;ED+CU;ICnCV;EDoCA;EAGU;ICrCV;IACA;IACA;EDqCA;EAFU;IChCV;IACA;EDqCA;EANU;IChCV;IACA;EDyCA;EAVU;IChCV;IACA;ED6CA;EAdU;IChCV;IACA;EDiDA;EAlBU;IChCV;IACA;EDqDA;EAtBU;IChCV;IACA;EDyDA;EA1BU;IChCV;IACA;ED6DA;EA9BU;IChCV;IACA;EDiEA;EAlCU;IChCV;IACA;EDqEA;EAtCU;IChCV;IACA;EDyEA;EA1CU;IChCV;IACA;ED6EA;EA9CU;IChCV;IACA;EDiFA;AACF;ACtGE;ED+CU;ICnCV;ED8FA;EAvDU;ICrCV;IACA;IACA;ED+FA;EA5DU;IChCV;IACA;ED+FA;EAhEU;IChCV;IACA;EDmGA;EApEU;IChCV;IACA;EDuGA;EAxEU;IChCV;IACA;ED2GA;EA5EU;IChCV;IACA;ED+GA;EAhFU;IChCV;IACA;EDmHA;EApFU;IChCV;IACA;EDuHA;EAxFU;IChCV;IACA;ED2HA;EA5FU;IChCV;IACA;ED+HA;EAhGU;IChCV;IACA;EDmIA;EApGU;IChCV;IACA;EDuIA;EAxGU;IChCV;IACA;ED2IA;AACF;AChKE;ED+CU;ICnCV;EDwJA;EAjHU;ICrCV;IACA;IACA;EDyJA;EAtHU;IChCV;IACA;EDyJA;EA1HU;IChCV;IACA;ED6JA;EA9HU;IChCV;IACA;EDiKA;EAlIU;IChCV;IACA;EDqKA;EAtIU;IChCV;IACA;EDyKA;EA1IU;IChCV;IACA;ED6KA;EA9IU;IChCV;IACA;EDiLA;EAlJU;IChCV;IACA;EDqLA;EAtJU;IChCV;IACA;EDyLA;EA1JU;IChCV;IACA;ED6LA;EA9JU;IChCV;IACA;EDiMA;EAlKU;IChCV;IACA;EDqMA;AACF;AC1NE;ED+CU;ICnCV;EDkNA;EA3KU;ICrCV;IACA;IACA;EDmNA;EAhLU;IChCV;IACA;EDmNA;EApLU;IChCV;IACA;EDuNA;EAxLU;IChCV;IACA;ED2NA;EA5LU;IChCV;IACA;ED+NA;EAhMU;IChCV;IACA;EDmOA;EApMU;IChCV;IACA;EDuOA;EAxMU;IChCV;IACA;ED2OA;EA5MU;IChCV;IACA;ED+OA;EAhNU;IChCV;IACA;EDmPA;EApNU;IChCV;IACA;EDuPA;EAxNU;IChCV;IACA;ED2PA;EA5NU;IChCV;IACA;ED+PA;AACF;ACpRE;ED+CU;ICnCV;ED4QA;EArOU;ICrCV;IACA;IACA;ED6QA;EA1OU;IChCV;IACA;ED6QA;EA9OU;IChCV;IACA;EDiRA;EAlPU;IChCV;IACA;EDqRA;EAtPU;IChCV;IACA;EDyRA;EA1PU;IChCV;IACA;ED6RA;EA9PU;IChCV;IACA;EDiSA;EAlQU;IChCV;IACA;EDqSA;EAtQU;IChCV;IACA;EDySA;EA1QU;IChCV;IACA;ED6SA;EA9QU;IChCV;IACA;EDiTA;EAlRU;IChCV;IACA;EDqTA;EAtRU;IChCV;IACA;EDyTA;AACF;;AA7QQ;EACI;AAgRZ;AA7QQ;EACI;AA+QZ;AA5QQ;EACI;AA8QZ;AA5QY;EACI;EACA;EACA;AA8QhB;AA3QY;EACI;EACA;EACA;EACA;AA6QhB;;AAtQA;EACI;AAyQJ;;AAtQA;EACI;EACA;EACA;AAyQJ;;AAtQA;EACI;EACA;AAyQJ;;AAtQA;EACI;EACA;AAyQJ;;AAtQA;EACI;EACA;EACA;AAyQJ;;AAtQA;EACI;EACA;EACA;EACA;EACA;AAyQJ;AAvQI;EACI;EACA;AAyQR;;AArQA;EACI;EACA;EACA;EACA;AAwQJ;;AArQA;EACI;EACA;EACA;EACA;EACA;EACA;AAwQJ;AAtQI;EACI;AAwQR;AArQI;EACI;AAuQR;AApQI;EACI;AAsQR;AApQC;EACC;AAsQF;;AAjQA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;AAoQJ;;AAjQA;EACI;AAoQJ,C","sources":["webpack://fancy-squares-core-enhancements/./src/editor.scss","webpack://fancy-squares-core-enhancements/./src/_mixins.scss"],"sourcesContent":["// ==========================================\n// File: editor.scss\n// Styles for core/column enhancements (columnOptionsCore only)\n// ==========================================\n\n@use \"sass:map\";\n@use \"settings\" as *;\n@use \"mixins\" as *;\n\n// Define column sizes\n$column-sizes: (\n  \"\": false, // Default .wp-block-column--column\n  \"auto\": auto,\n  \"1\": 1,\n  \"2\": 2,\n  \"3\": 3,\n  \"4\": 4,\n  \"5\": 5,\n  \"6\": 6,\n  \"7\": 7,\n  \"8\": 8,\n  \"9\": 9,\n  \"10\": 10,\n  \"11\": 11,\n  \"12\": 12\n);\n\n// Define breakpoints matching $grid-breakpoints\n$column-breakpoints: (\n  \"\": xs,  // Base (no prefix)\n  \"-sm\": sm,\n  \"-md\": md,\n  \"-lg\": lg,\n  \"-xl\": xl,\n  \"-xxl\": xxl\n);\n\n// Styles for wp-block-column (columnOptionsCore classes)\n.wp-block-column {\n  @each $prefix, $breakpoint in $column-breakpoints {\n    @if $prefix == \"\" {\n      @each $size-name, $size-value in $column-sizes {\n        // Add dash only if $size-name is not empty\n        @if $size-name == \"\" {\n          &.wp-block-column--column {\n            @include make-col($size-value);\n          }\n        } @else {\n          &.wp-block-column--column-#{$size-name} {\n            @include make-col($size-value);\n          }\n        }\n      }\n    } @else {\n      @include media-breakpoint-up(map.get($column-breakpoints, $prefix)) {\n        @each $size-name, $size-value in $column-sizes {\n          // Add dash only if $size-name is not empty\n          @if $size-name == \"\" {\n            &.wp-block-column--column#{$prefix} {\n              @include make-col($size-value);\n            }\n          } @else {\n            &.wp-block-column--column#{$prefix}-#{$size-name} {\n              @include make-col($size-value);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n\n// Styles for FormTokenField controls (shared across all blocks)\n.custom-inspector-controls {\n    .components-panel__body {\n        .components-checkbox-control {\n            margin-bottom: 20px;\n        }\n\n        .components-form-token-field {\n            margin-bottom: 20px;\n        }\n\n        details {\n            margin-top: 5px;\n\n            summary {\n                cursor: pointer;\n                font-size: 12px;\n                color: #555;\n            }\n\n            ul {\n                font-size: 12px;\n                padding-left: 20px;\n                margin: 5px 0;\n                list-style: disc;\n            }\n        }\n    }\n}\n\n// Styles for WidthControl (specific to core/column)\n.custom-column-widths__group {\n    margin-bottom: 20px;\n}\n\n.custom-column-widths__header {\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n}\n\n.custom-column-widths__icon {\n    margin-right: 5px;\n    color: #555;\n}\n\n.custom-column-widths__label {\n    flex-grow: 1;\n    font-weight: 500;\n}\n\n.custom-column-widths__value {\n    margin-right: 5px;\n    font-style: italic;\n    color: #666;\n}\n\n.custom-column-widths__option {\n    background: #f0f0f0;\n    border: 1px solid #ccc;\n    padding: 5px 10px;\n    margin-left: 5px;\n    cursor: pointer;\n\n    &.is-active {\n        background: #ddd;\n        font-weight: bold;\n    }\n}\n\n.custom-column-widths__slider {\n    position: relative;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 5px;\n}\n\n.custom-column-widths__square {\n    width: 15.25px;\n    height: 40px;\n    background: #ddd;\n    border: 1px solid #ccc;\n    cursor: pointer;\n    transition: background-color 0.2s;\n\n    &:hover {\n        background: #ccc;\n    }\n\n    &--selected {\n        background: #000;\n    }\n\n    &:nth-child(4n) {\n        margin-right: 5px; // Add spacing after every 4th square\n    }\n\t&:nth-child(12) {\n\t\tmargin-right: 0; // Remove margin for the last square\n\t}\n\n}\n\n.custom-column-widths__range {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    cursor: pointer;\n}\n\n.custom-column-widths__bootstrap-notice {\n    margin-bottom: 15px;\n}\n","// ==========================================\n// File: _mixins.scss\n// ==========================================\n\n@use \"sass:map\";\n@use \"settings\" as *;\n\n/// Mixin: media-breakpoint-up($breakpoint)\n/// Applies min-width media query based on $grid-breakpoints.\n@mixin media-breakpoint-up($breakpoint) {\n\t@if map.has-key($grid-breakpoints, $breakpoint) {\n\t\t@media (min-width: #{map.get($grid-breakpoints, $breakpoint)}) {\n\t\t\t@content;\n\t\t}\n\t} @else {\n\t\t@warn \"Breakpoint `#{$breakpoint}` not found in $grid-breakpoints map.\";\n\t}\n}\n\n/// Mixin: make-column($size)\n/// Creates .column, .column-auto, .column-1..12 styles.\n@mixin make-col($size: false) {\n\t@if $size == false {\n\t\tflex: 1 0 0%;\n\t} @else if $size == auto {\n\t\tflex: 0 0 auto;\n\t\twidth: auto;\n\t\tmax-width: none;\n\t} @else {\n\t\t$pct: calc(100% * $size / 12);\n\t\tflex: 0 0 auto;\n\t\twidth: #{$pct};\n\t}\n}\n"],"names":[],"sourceRoot":""}